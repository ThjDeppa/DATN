﻿@model WebBanHangOnline.Models.OrderViewModel
@{
    if (ViewBag.User != null)
    {

    }
}

@using System.Linq
@{
    var promotions = ViewBag.Promotions as IEnumerable<WebBanHangOnline.Models.EF.Promotion>;
    var vouchers = ViewBag.Vouchers as IEnumerable<WebBanHangOnline.Models.EF.Vouchers>;
}

@using (Ajax.BeginForm("CheckOut", "Shoppingcart", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"

}, new { @Id = "myForm" }))


{
    <script>
        function OnBeginCO() {
            $('#btnCheckOut').attr("disabled", "disabled");
            $('#load_send').html('<h2>Đang gửi....</h2>');
        }
        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code == 1) {
                    location.href = "/ShoppingCart/CheckOutSuccess";
                }
                else {
                    location.href = res.Url;
                }
            }
        }
    </script>
    @Html.AntiForgeryToken()

    <h3>Thông tin khách hàng</h3>
    if (!Request.IsAuthenticated)
    {
        <div class="form-group">
            <label>Họ tên khách hàng</label>
            <input type="text" name="CustomerName" required class="form-control" autocomplete="off" />
        </div>


        <div class="form-group">
            <label>Số điện thoại</label>
            <input type="text" name="Phone" class="form-control" autocomplete="off" />
        </div>


        <div class="form-group">
            <label>Địa chỉ</label>
            <input type="text" name="Address" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <input type="text" name="Email" class="form-control" autocomplete="off" />
        </div>
    }
    else
    {
        var user = (WebBanHangOnline.Models.ApplicationUser)ViewBag.User;
        <div class="form-group">
            <label>Họ tên khách hàng</label>
            <input type="text" name="CustomerName" value="@user.FullName" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Số điện thoại</label>
            <input type="text" name="Phone" value="@user.Phone" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Địa chỉ</label>
            <input type="text" name="Address" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <input type="text" name="Email" value="@user.Email" class="form-control" autocomplete="off" />
        </div>
    }

<div class="form-group">
    <label for="PromotionCode">Chọn mã giảm giá (nếu có)</label>
    <select id="PromotionCode" name="PromotionCode" class="form-control">
        <option value="">-- Chọn mã giảm giá --</option>

        @if (promotions != null)
        {
            foreach (var promo in promotions)
            {
                var firstProduct = promo.promotion_product.FirstOrDefault();
                var discount = firstProduct?.Type ?? 0;
                <option value="@promo.Code"
                        data-discount="@discount"
                        data-type="promotion">
                    [KM] @promo.Title (Giảm @discount%)
                </option>
            }
        }

        @if (vouchers != null)
        {
            foreach (var voucher in vouchers)
            {
                <option value="voucher-@voucher.Id"
                        data-discount="@voucher.Type"
                        data-type="voucher"
                        data-min="@voucher.MinimunValue"
                        data-value="@voucher.Value">
                    [VC] @voucher.Title (Giảm @(voucher.Type == 0 ? voucher.Value.ToString("N0") + "đ" : voucher.Type + "%"))
                </option>
            }
        }
    </select>
</div>


    <div class="form-group">
        <label>Hình thức thanh toán</label>
        <select class="form-control" name="TypePayment" id="drTypePayment">
            <option value="1" selected>COD</option>
            <option value="2"> Chuyển khoản</option>
        </select>
    </div>
    <div class="form-group" id="load_form_payment" style="display:none;">
        <h4> <label>Chọn phương thức thanh toán:</label><br /></h4>
        <h5>Cách 1: Chuyển hướng sang VNPAY chọn phương thức thanh toán</h5>
        <label><input type="radio" name="TypePaymentVN" value="0" checked /> Cổng thanh toán VNPAYQR</label>
        <h5>Cách 2: Tách phương thức thanh toán tại site của Merchant</h5>
        <label><input type="radio" name="TypePaymentVN" value="1" /> Thanh toán qua ứng dụng hỗ trợ VNPAYQR</label><br />
        <label><input type="radio" name="TypePaymentVN" value="2" /> ATM - Tài khoản ngân hàng nội địa</label><br />
        <label><input type="radio" name="TypePaymentVN" value="3" /> Thanh toán qua thẻ quốc tế</label><br />
    </div>
    <div class="form-group" id="load_send"></div>
    <div class="form-group">
        <button type="submit" class="btn btn-block btn-success" id="btnCheckOut">Đặt hàng</button>
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            function formatCurrency(num) {
                return num.toLocaleString('vi-VN') + ' VNĐ';
            }

            $('#PromotionCode').on('change', function () {
                var selectedOption = $(this).find('option:selected');
                var discountType = selectedOption.data('type');
                var discountValue = parseFloat(selectedOption.data('discount')) || 0;
                var minValue = parseFloat(selectedOption.data('min')) || 0;
                var fixedValue = parseFloat(selectedOption.data('value')) || 0;

                var subtotal = parseFloat($('#subtotalPrice').data('value')) || 0;
                var shipping = parseFloat($('#shippingPrice').data('value')) || 0;
                var discountAmount = 0;

                if (discountType === 'voucher') {
                    if (discountValue === 0) { // Fixed discount
                        discountAmount = fixedValue;
                    } else { // Percentage discount
                        discountAmount = (discountValue / 100) * subtotal;
                    }
                    // Check minimum order value
                    if (minValue > 0 && subtotal < minValue) {
                        alert('Voucher chỉ áp dụng cho đơn hàng từ ' + minValue.toLocaleString() + 'đ');
                        $(this).val('');
                        discountAmount = 0;
                    }
                } else { // Promotion
                    discountAmount = (discountValue / 100) * subtotal;
                }

                var total = subtotal + shipping - discountAmount;
                $('#discountAmount').text(formatCurrency(discountAmount));
                $('#totalPrice').text(formatCurrency(total));
            });
        });
    </script>
}